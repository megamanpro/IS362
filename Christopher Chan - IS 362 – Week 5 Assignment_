{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "76880edc-9342-4f8c-8404-42f2234d629a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   faa                           name        lat        lon   alt  tz dst  \\\n",
      "0  04G              Lansdowne Airport  41.130472 -80.619583  1044  -5   A   \n",
      "1  06A  Moton Field Municipal Airport  32.460572 -85.680028   264  -6   A   \n",
      "2  06C            Schaumburg Regional  41.989341 -88.101243   801  -6   A   \n",
      "3  06N                Randall Airport  41.431912 -74.391561   523  -5   A   \n",
      "4  09J          Jekyll Island Airport  31.074472 -81.427778    11  -5   A   \n",
      "\n",
      "              tzone  \n",
      "0  America/New_York  \n",
      "1   America/Chicago  \n",
      "2   America/Chicago  \n",
      "3  America/New_York  \n",
      "4  America/New_York  \n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "airports = pd.read_csv(r'C:\\Users\\Chris\\Downloads\\airports.csv')\n",
    "weather = pd.read_csv(r'C:\\Users\\Chris\\Downloads\\weather.csv')\n",
    "print(airports.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "ed1c23ce-8f2d-4514-abbb-2de3ef0dfc42",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>origin</th>\n",
       "      <th>year</th>\n",
       "      <th>month</th>\n",
       "      <th>day</th>\n",
       "      <th>hour</th>\n",
       "      <th>temp</th>\n",
       "      <th>dewp</th>\n",
       "      <th>humid</th>\n",
       "      <th>wind_dir</th>\n",
       "      <th>wind_speed</th>\n",
       "      <th>wind_gust</th>\n",
       "      <th>precip</th>\n",
       "      <th>pressure</th>\n",
       "      <th>visib</th>\n",
       "      <th>time_hour</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>EWR</td>\n",
       "      <td>2013</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>39.02</td>\n",
       "      <td>26.06</td>\n",
       "      <td>59.37</td>\n",
       "      <td>270.0</td>\n",
       "      <td>10.35702</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1012.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>2013-01-01T06:00:00Z</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>EWR</td>\n",
       "      <td>2013</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>39.02</td>\n",
       "      <td>26.96</td>\n",
       "      <td>61.63</td>\n",
       "      <td>250.0</td>\n",
       "      <td>8.05546</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1012.3</td>\n",
       "      <td>10.0</td>\n",
       "      <td>2013-01-01T07:00:00Z</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>EWR</td>\n",
       "      <td>2013</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>39.02</td>\n",
       "      <td>28.04</td>\n",
       "      <td>64.43</td>\n",
       "      <td>240.0</td>\n",
       "      <td>11.50780</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1012.5</td>\n",
       "      <td>10.0</td>\n",
       "      <td>2013-01-01T08:00:00Z</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>EWR</td>\n",
       "      <td>2013</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>39.92</td>\n",
       "      <td>28.04</td>\n",
       "      <td>62.21</td>\n",
       "      <td>250.0</td>\n",
       "      <td>12.65858</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1012.2</td>\n",
       "      <td>10.0</td>\n",
       "      <td>2013-01-01T09:00:00Z</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>EWR</td>\n",
       "      <td>2013</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>39.02</td>\n",
       "      <td>28.04</td>\n",
       "      <td>64.43</td>\n",
       "      <td>260.0</td>\n",
       "      <td>12.65858</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1011.9</td>\n",
       "      <td>10.0</td>\n",
       "      <td>2013-01-01T10:00:00Z</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26110</th>\n",
       "      <td>LGA</td>\n",
       "      <td>2013</td>\n",
       "      <td>12</td>\n",
       "      <td>30</td>\n",
       "      <td>14</td>\n",
       "      <td>35.96</td>\n",
       "      <td>19.94</td>\n",
       "      <td>51.78</td>\n",
       "      <td>340.0</td>\n",
       "      <td>13.80936</td>\n",
       "      <td>21.86482</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1017.1</td>\n",
       "      <td>10.0</td>\n",
       "      <td>2013-12-30T19:00:00Z</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26111</th>\n",
       "      <td>LGA</td>\n",
       "      <td>2013</td>\n",
       "      <td>12</td>\n",
       "      <td>30</td>\n",
       "      <td>15</td>\n",
       "      <td>33.98</td>\n",
       "      <td>17.06</td>\n",
       "      <td>49.51</td>\n",
       "      <td>330.0</td>\n",
       "      <td>17.26170</td>\n",
       "      <td>21.86482</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1018.8</td>\n",
       "      <td>10.0</td>\n",
       "      <td>2013-12-30T20:00:00Z</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26112</th>\n",
       "      <td>LGA</td>\n",
       "      <td>2013</td>\n",
       "      <td>12</td>\n",
       "      <td>30</td>\n",
       "      <td>16</td>\n",
       "      <td>32.00</td>\n",
       "      <td>15.08</td>\n",
       "      <td>49.19</td>\n",
       "      <td>340.0</td>\n",
       "      <td>14.96014</td>\n",
       "      <td>23.01560</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1019.5</td>\n",
       "      <td>10.0</td>\n",
       "      <td>2013-12-30T21:00:00Z</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26113</th>\n",
       "      <td>LGA</td>\n",
       "      <td>2013</td>\n",
       "      <td>12</td>\n",
       "      <td>30</td>\n",
       "      <td>17</td>\n",
       "      <td>30.92</td>\n",
       "      <td>12.92</td>\n",
       "      <td>46.74</td>\n",
       "      <td>320.0</td>\n",
       "      <td>17.26170</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1019.9</td>\n",
       "      <td>10.0</td>\n",
       "      <td>2013-12-30T22:00:00Z</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26114</th>\n",
       "      <td>LGA</td>\n",
       "      <td>2013</td>\n",
       "      <td>12</td>\n",
       "      <td>30</td>\n",
       "      <td>18</td>\n",
       "      <td>28.94</td>\n",
       "      <td>10.94</td>\n",
       "      <td>46.41</td>\n",
       "      <td>330.0</td>\n",
       "      <td>18.41248</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1020.9</td>\n",
       "      <td>10.0</td>\n",
       "      <td>2013-12-30T23:00:00Z</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>26115 rows Ã— 15 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      origin  year  month  day  hour   temp   dewp  humid  wind_dir  \\\n",
       "0        EWR  2013      1    1     1  39.02  26.06  59.37     270.0   \n",
       "1        EWR  2013      1    1     2  39.02  26.96  61.63     250.0   \n",
       "2        EWR  2013      1    1     3  39.02  28.04  64.43     240.0   \n",
       "3        EWR  2013      1    1     4  39.92  28.04  62.21     250.0   \n",
       "4        EWR  2013      1    1     5  39.02  28.04  64.43     260.0   \n",
       "...      ...   ...    ...  ...   ...    ...    ...    ...       ...   \n",
       "26110    LGA  2013     12   30    14  35.96  19.94  51.78     340.0   \n",
       "26111    LGA  2013     12   30    15  33.98  17.06  49.51     330.0   \n",
       "26112    LGA  2013     12   30    16  32.00  15.08  49.19     340.0   \n",
       "26113    LGA  2013     12   30    17  30.92  12.92  46.74     320.0   \n",
       "26114    LGA  2013     12   30    18  28.94  10.94  46.41     330.0   \n",
       "\n",
       "       wind_speed  wind_gust  precip  pressure  visib             time_hour  \n",
       "0        10.35702        NaN     0.0    1012.0   10.0  2013-01-01T06:00:00Z  \n",
       "1         8.05546        NaN     0.0    1012.3   10.0  2013-01-01T07:00:00Z  \n",
       "2        11.50780        NaN     0.0    1012.5   10.0  2013-01-01T08:00:00Z  \n",
       "3        12.65858        NaN     0.0    1012.2   10.0  2013-01-01T09:00:00Z  \n",
       "4        12.65858        NaN     0.0    1011.9   10.0  2013-01-01T10:00:00Z  \n",
       "...           ...        ...     ...       ...    ...                   ...  \n",
       "26110    13.80936   21.86482     0.0    1017.1   10.0  2013-12-30T19:00:00Z  \n",
       "26111    17.26170   21.86482     0.0    1018.8   10.0  2013-12-30T20:00:00Z  \n",
       "26112    14.96014   23.01560     0.0    1019.5   10.0  2013-12-30T21:00:00Z  \n",
       "26113    17.26170        NaN     0.0    1019.9   10.0  2013-12-30T22:00:00Z  \n",
       "26114    18.41248        NaN     0.0    1020.9   10.0  2013-12-30T23:00:00Z  \n",
       "\n",
       "[26115 rows x 15 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "weather"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "160ff80c-dad4-49a8-86c9-72243730943a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                            name        lat         lon\n",
      "230                   Wiley Post Will Rogers Mem  71.285446 -156.766003\n",
      "110                           Wainwright Airport  70.638056 -159.994722\n",
      "708                                Wainwright As  70.613378 -159.860350\n",
      "152   Atqasuk Edward Burnell Sr Memorial Airport  70.467300 -157.436000\n",
      "1363                        Ugnu-Kuparuk Airport  70.330833 -149.597500\n"
     ]
    }
   ],
   "source": [
    "northernmost_airports = airports.sort_values(by='lat', ascending=False).head(5)\n",
    "print(northernmost_airports[['name', 'lat','lon']])\n",
    "airports.loc[airports['name'] == 'Dillant Hopkins Airport', ['lat', 'lon']] = [42.906396, -72.272645]"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "id": "42774bc0-4986-43ee-b685-2b87882b2972",
   "metadata": {},
   "source": [
    "To find the northernmost airport, I sorted by lat since that is measuring the North to South plane and descending the values from highest to lowest.\n",
    "When I looked up Dillant Hopkins Airport as that was initially at the top of the list, it showed up in New Hampshire and looking up the lat and lon coordinates points to the middle of the ocean.\n",
    "The issue is the coordinates are wrong so I changed the actual coordinate is 42.90639612976553, -72.27264511987325\n",
    "The correct answer should be Wiley Post Will Rogers Mem, as this airport is in the far north part of Alaska.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "a94c8356-5196-44fa-9457-97a2d6710323",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                    name        lat         lon  alt  tz dst  \\\n",
      "112         Atka Airport  52.220278 -174.206389   56  -9   A   \n",
      "522      Gambell Airport  63.766800 -171.733000   27  -9   A   \n",
      "1281    Savoonga Airport  63.686400 -170.493000   53  -9   A   \n",
      "1251      St Paul Island  57.167333 -170.220444   63  -9   A   \n",
      "1270  St. George Airport  56.577222 -169.663611  125  -9   A   \n",
      "\n",
      "                  tzone  \n",
      "112   America/Anchorage  \n",
      "522   America/Anchorage  \n",
      "1281  America/Anchorage  \n",
      "1251  America/Anchorage  \n",
      "1270  America/Anchorage  \n",
      "                               name        lat         lon   alt  tz dst  \\\n",
      "95                     Adak Airport  51.878000  176.646000    18  -9   A   \n",
      "1290                   Eareckson As  52.712275  174.113620    98  -9   A   \n",
      "942                Montgomery Field  32.475900  117.759000    17   8   A   \n",
      "396   Deer Valley Municipal Airport  33.411700  112.457000  1478   8   A   \n",
      "444      Eastport Municipal Airport  44.910111  -67.012694    45  -5   A   \n",
      "\n",
      "                  tzone  \n",
      "95    America/Anchorage  \n",
      "1290  America/Anchorage  \n",
      "942      Asia/Chongqing  \n",
      "396      Asia/Chongqing  \n",
      "444    America/New_York  \n"
     ]
    }
   ],
   "source": [
    "easternmost_airports = airports.sort_values(by='lon', ascending=True).head(5)\n",
    "print(easternmost_airports[['name', 'lat', 'lon', 'alt','tz','dst','tzone']])\n",
    "easternmost_airports = airports.sort_values(by='lon', ascending=False).head(5)\n",
    "print(easternmost_airports[['name', 'lat', 'lon', 'alt','tz','dst','tzone']])\n",
    "airports.loc[airports['name'] == 'Adak Airport', ['lat', 'lon']] = [51.878000, 176.646000]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c574e402-7ed9-4300-b63b-ef51c4af9599",
   "metadata": {},
   "source": [
    "Finding the eastern most airport is pretty much the same thing as the last question except we sort by lon instead. \n",
    "If I only searched by descending lon, Eareckson As shows up at the top of the list but I also searched by ascending lon, Adak Airport is at the top but the lon value is negative when it should not. Adak Airport should be at 51.878000, 176.646000 which is my answer."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "id": "43e75b6e-940a-4a57-975e-e889dc18441d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "      origin  year  month  day  hour   temp   dewp  humid  wind_dir  \\\n",
      "1009     EWR  2013      2   12     3  39.02  26.96  61.63     260.0   \n",
      "18417    LGA  2013      2   12     2  42.98  26.06  50.94     290.0   \n",
      "1018     EWR  2013      2   12    12  44.06  26.06  48.87     270.0   \n",
      "18428    LGA  2013      2   12    13  44.06  23.00  43.02     300.0   \n",
      "18429    LGA  2013      2   12    14  44.06  23.00  43.02     300.0   \n",
      "...      ...   ...    ...  ...   ...    ...    ...    ...       ...   \n",
      "1006     EWR  2013      2   12     0  39.92  39.02  96.55     240.0   \n",
      "1027     EWR  2013      2   12    21  35.96  24.08  61.67     300.0   \n",
      "18415    LGA  2013      2   12     0  42.08  37.40  86.89       NaN   \n",
      "9709     JFK  2013      2   12     0  42.08  37.04  82.17     280.0   \n",
      "1029     EWR  2013      2   12    23  35.96  23.00  58.94     250.0   \n",
      "\n",
      "       wind_speed  wind_gust  precip  pressure  visib             time_hour  \n",
      "1009   1048.36058        NaN     0.0    1008.3   10.0  2013-02-12T08:00:00Z  \n",
      "18417    23.01560   31.07106     0.0    1007.1   10.0  2013-02-12T07:00:00Z  \n",
      "1018     21.86482   31.07106     0.0    1012.5   10.0  2013-02-12T17:00:00Z  \n",
      "18428    21.86482   25.31716     0.0    1011.7   10.0  2013-02-12T18:00:00Z  \n",
      "18429    20.71404   25.31716     0.0    1011.5   10.0  2013-02-12T19:00:00Z  \n",
      "...           ...        ...     ...       ...    ...                   ...  \n",
      "1006      6.90468        NaN     0.0    1006.9   10.0  2013-02-12T05:00:00Z  \n",
      "1027      5.75390        NaN     0.0    1013.0   10.0  2013-02-13T02:00:00Z  \n",
      "18415     4.60312        NaN     0.0       NaN   10.0  2013-02-12T05:00:00Z  \n",
      "9709      4.60312        NaN     0.0    1007.1   10.0  2013-02-12T05:00:00Z  \n",
      "1029      4.60312        NaN     0.0    1013.7   10.0  2013-02-13T04:00:00Z  \n",
      "\n",
      "[72 rows x 15 columns]\n"
     ]
    }
   ],
   "source": [
    "\n",
    "ny_weather = weather[(weather['origin'].isin(['JFK', 'LGA', 'EWR'])) & (weather['year'] == 2013) & (weather['month'] == 2) & (weather['day'] == 12)]\n",
    "windiest_weather = ny_weather.sort_values(by='wind_speed', ascending=False)\n",
    "print(windiest_weather)\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8d5dd39e-ca6d-4c86-bc76-cccf862f024a",
   "metadata": {},
   "source": [
    "Started the search off with the the date and NYC airports, JFK, LGA and EWK. Followed by searching for wind speed in descending order. \n",
    "There's an issue with the top result as 1048.36058 seems like too high of a wind factor if it's measured in MPH. I would have to go with the next in line, LGA with wind speeds of 23 MPH that day. "
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python [conda env:base] *",
   "language": "python",
   "name": "conda-base-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
